<!-- ===================================================================
 License:
    DiscerningEye - FFXIV Gathering Companion App
    AlarmsView.xaml
    
    Copyright(C) 2015 - 2016  Christopher Whitley    

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.If not, see<http://www.gnu.org/licenses/> .
  =================================================================== -->


<UserControl x:Class="DiscerningEye.Views.Alarms"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converters="clr-namespace:DiscerningEye.Converters"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:p="clr-namespace:DiscerningEye.Properties"
             xmlns:local="clr-namespace:DiscerningEye.Views"
             xmlns:ac="clr-namespace:DiscerningEye.AlarmController"
             xmlns:utils="clr-namespace:DiscerningEye.Utilities"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:dat="clr-namespace:System.Windows.Data;assembly=PresentationFramework"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:AlarmController="clr-namespace:DiscerningEye.AlarmController"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1280">


    <UserControl.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <CollectionViewSource x:Key="BotanistViewSource" 
                              IsLiveFilteringRequested="True"
                              IsLiveSortingRequested="True"
                              Source="{Binding Source={x:Static ac:Controller.Master}, Path=AlarmItemCollection}"
                              VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                              Filter="BotanistViewSource_Filter">
            <CollectionViewSource.GroupDescriptions>
                <dat:PropertyGroupDescription PropertyName="Job" />
            </CollectionViewSource.GroupDescriptions>
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Job" Direction="Ascending" />
                <scm:SortDescription PropertyName="Name" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <Style x:Key="CheckBoxSelectTypeStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MetroCheckBox}">
            <Setter Property="Command" Value="{Binding DataContext.AlarmItemChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
            <Setter Property="CommandParameter" Value="{Binding}" />
        </Style>

            <EllipseGeometry x:Key="Circle" Center="0,0" RadiusX="5" RadiusY="5" />    

        
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="300"/>
            <RowDefinition Height="300"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" MinWidth="470" />
            <ColumnDefinition Width="419" />
        </Grid.ColumnDefinitions>
    

        <!-- 
        
            Search Alarms 
        
        -->
        <GroupBox Grid.Row="0"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  Header="Search Alarms">
            <StackPanel Margin="5,5"
                        Orientation="Vertical">
                <TextBlock Text="Search for an item in the alarms list" />
                <DockPanel LastChildFill="True"
                           Margin="0,5">
                    <Button DockPanel.Dock="Right"
                            Margin="5,0,0,0"
                            Content="Search"
                            IsDefault="True"
                            Command="{Binding SearchAlarmsCommand}" />
                    <TextBox Controls:TextBoxHelper.Watermark="Enter full or partial item name to search"
                             Controls:TextBoxHelper.ClearTextButton="True"
                             AcceptsReturn="False"
                             Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </DockPanel>
            </StackPanel>
        </GroupBox>


       
        <!-- Alarms -->
        <GroupBox Grid.Row="1"
                  Grid.Column="0"
                  Width="735"
                  Height="auto"
                  x:Name="grpAlarms"
                  Header="Botany Alarms">
            <DataGrid ItemsSource="{Binding BotanistView}"
                      AutoGenerateColumns="False"
                      SelectionMode="Single"
                      ScrollViewer.CanContentScroll="True"
                      VirtualizingPanel.VirtualizationMode="Recycling"
                      VirtualizingPanel.IsContainerVirtualizable="True"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.ScrollUnit="Pixel"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      CanUserAddRows="False"
                      SelectedValue="{Binding SelectedAlarmItem, Mode=OneWayToSource}">

                <DataGrid.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </DataGrid.ItemsPanel>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsSet}" Style="{StaticResource CheckBoxSelectTypeStyle}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Name" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Rectangle Width="16" Height="16">
                                        <Rectangle.Fill>
                                            <DrawingBrush>
                                                <DrawingBrush.Drawing>
                                                    <GeometryDrawing Brush="{Binding MessageForegroundColor}" Geometry="{StaticResource Circle}" />
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <TextBlock Margin="5,0,0,0" Text="{Binding Name}" />
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn IsReadOnly="True" Width="*" Header="Start" Binding="{Binding Path=StartTime}"  />
                    <DataGridTextColumn IsReadOnly="True" Width="*" Header="Zone" Binding="{Binding Path=Zone}" />

                    <DataGridTextColumn IsReadOnly="True" Width="*" Header="Location (x,y,z)">
                        <DataGridTextColumn.Binding>
                            <MultiBinding StringFormat="{} ({0}, {1}, {2})">
                                <Binding Path="LocationX" />
                                <Binding Path="LocationY" />
                                <Binding Path="LocationZ" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Availble In" IsReadOnly="True" Width="*" Binding="{Binding AvaliableMessage}" />
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>

        <GroupBox Grid.Row="2"
                  Grid.Column="0"
                  Width="735"
                  Height="auto"
                  Header="Miner Alarms">
            <DataGrid ItemsSource="{Binding MinerView}"
                      AutoGenerateColumns="False"
                      SelectionMode="Single"
                      ScrollViewer.CanContentScroll="True"
                      VirtualizingPanel.VirtualizationMode="Recycling"
                      VirtualizingPanel.IsContainerVirtualizable="True"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.ScrollUnit="Pixel"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      CanUserAddRows="False"
                      SelectedValue="{Binding SelectedAlarmItem, Mode=OneWayToSource}">

                <DataGrid.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </DataGrid.ItemsPanel>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsSet}" Style="{StaticResource CheckBoxSelectTypeStyle}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Name" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Rectangle Width="16" Height="16">
                                        <Rectangle.Fill>
                                            <DrawingBrush>
                                                <DrawingBrush.Drawing>
                                                    <GeometryDrawing Brush="{Binding MessageForegroundColor}" Geometry="{StaticResource Circle}" />
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <TextBlock Margin="5,0,0,0" Text="{Binding Name}" />
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn IsReadOnly="True" Width="*" Header="Start" Binding="{Binding Path=StartTime}"  />
                    <DataGridTextColumn IsReadOnly="True" Width="*" Header="Zone" Binding="{Binding Path=Zone}" />

                    <DataGridTextColumn IsReadOnly="True" Width="*" Header="Location (x,y,z)">
                        <DataGridTextColumn.Binding>
                            <MultiBinding StringFormat="{} ({0}, {1}, {2})">
                                <Binding Path="LocationX" />
                                <Binding Path="LocationY" />
                                <Binding Path="LocationZ" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Availble In" IsReadOnly="True" Width="*" Binding="{Binding AvaliableMessage}" />
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>







        <!-- Alarms --><!--
        <GroupBox Grid.Row="2"
                  Grid.Column="0"
                  Width="auto"
                  Height="auto"
                  Header="Miner Alarms">
            <DataGrid ItemsSource="{Binding MinerView}"
                      AutoGenerateColumns="False"
                      SelectionMode="Single"
                      ScrollViewer.CanContentScroll="True"
                      VirtualizingPanel.VirtualizationMode="Recycling"
                      VirtualizingPanel.IsContainerVirtualizable="True"
                      VirtualizingPanel.ScrollUnit="Item"
                      VirtualizingPanel.IsVirtualizing="True"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      CanUserAddRows="False"
                      SelectedValue="{Binding SelectedAlarmItem, Mode=OneWayToSource}">

                <DataGrid.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </DataGrid.ItemsPanel>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsSet}" Style="{StaticResource CheckBoxSelectTypeStyle}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Name" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Rectangle Width="16" Height="16">
                                        <Rectangle.Fill>
                                            <DrawingBrush>
                                                <DrawingBrush.Drawing>
                                                    <GeometryDrawing Brush="{Binding MessageForegroundColor}" Geometry="{StaticResource Circle}" />
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <TextBlock Margin="5,0,0,0" Text="{Binding Name}" />
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn IsReadOnly="True" Width="*" Header="Start" Binding="{Binding Path=StartTime}"  />
                    <DataGridTextColumn IsReadOnly="True" Width="*" Header="Zone" Binding="{Binding Path=Zone}" />

                    <DataGridTextColumn IsReadOnly="True" Width="*" Header="Location (x,y,z)">
                        <DataGridTextColumn.Binding>
                            <MultiBinding StringFormat="{} ({0}, {1}, {2})">
                                <Binding Path="LocationX" />
                                <Binding Path="LocationY" />
                                <Binding Path="LocationZ" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Availble In" IsReadOnly="True" Width="*" Binding="{Binding AvaliableMessage}" />
                </DataGrid.Columns>
                


            </DataGrid>
        </GroupBox>-->

        <GroupBox Grid.Row="1"
                  Grid.Column="1"
                  Grid.RowSpan="2"
                  Header="Selected Alarm Information (Select item from list to view info)">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>


                <GroupBox Grid.Row="0"
                              Grid.Column="0"
                              Grid.ColumnSpan="3"
                              Header="Item Description">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <Image Grid.Column="0"
                           Grid.ColumnSpan="2"
                       Grid.Row="0"
                       Width="76"
                       Height="76"
                       Source="{Binding SelectedAlarmItem.XIVDBItemRoot.icon}"/>
                            <Label Grid.Column="1"
                       Grid.Row="0"
                       VerticalAlignment="Center"
                       FontSize="20"
                       FontWeight="SemiBold"
                           Margin="10,0"
                       Content="{Binding SelectedAlarmItem.Name}"/>


                        </StackPanel>
                        <Border Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Grid.Row="1"
                        Height="75"
                        BorderThickness="0,1,0,0"
                        Margin="0,10">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource AccentColor}"/>
                            </Border.BorderBrush>
                            <TextBlock DockPanel.Dock="Top"
                                           TextWrapping="Wrap"
                                           FontSize="14"
                                           Text="{Binding SelectedAlarmItem.XIVDBItemRoot.help}"/>
                        </Border>
                    </StackPanel>

                </GroupBox>
                <GroupBox Grid.Row="1"
                          Grid.Column="0"
                          Grid.ColumnSpan="3"
                          Header="Location Information">
                    <DataGrid CanUserAddRows="False"
                              CanUserReorderColumns="False"
                              CanUserResizeColumns="False"
                              CanUserResizeRows="False"
                              CanUserSortColumns="False"
                              CanUserDeleteRows="False"
                              IsReadOnly="True"
                              AutoGenerateColumns="False"
                              ItemsSource="{Binding SelectedAlarmItem.Location}"
                              VerticalContentAlignment="Center"
                              HorizontalContentAlignment="Center">
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="*"
                                                Header="Zone"
                                                Binding="{Binding Zone}"/>

                            <DataGridTextColumn Width="*"
                                                Header="Location (x,y,z)">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding StringFormat="{} ({0}, {1}, {2})">
                                        <Binding Path="LocationX" />
                                        <Binding Path="LocationY" />
                                        <Binding Path="LocationZ" />
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Width="*"
                                                Header="Slot"
                                                Binding="{Binding Slot}">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>


                </GroupBox>

                <GroupBox Grid.Row="2"
                          Grid.Column="0"
                          Grid.ColumnSpan="3"
                          Header="Requirments For Gathering">
                    <DataGrid CanUserAddRows="False"
                              CanUserReorderColumns="False"
                              CanUserResizeColumns="False"
                              CanUserResizeRows="False"
                              CanUserSortColumns="False"
                              CanUserDeleteRows="False"
                              IsReadOnly="True"
                              AutoGenerateColumns="False"
                              ItemsSource="{Binding SelectedAlarmItem.Requirment}"
                              VerticalContentAlignment="Center"
                              HorizontalContentAlignment="Center">
                        <DataGrid.Columns>
                            <DataGridTextColumn TextBlock.TextAlignment="Center" Header="Min Gathering" Width="*" Binding="{Binding Gathering}">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Min Perception" Width="*" Binding="{Binding Perception}">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>

            </Grid>


        </GroupBox>
        
        
        
        
        
    </Grid>
</UserControl>
