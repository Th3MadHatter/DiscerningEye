<!-- ===================================================================
 License:
    DiscerningEye - FFXIV Gathering Companion App
    MainWindow.xaml
    
    Copyright(C) 2015 - 2016  Christopher Whitley    

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.If not, see<http://www.gnu.org/licenses/> .
  =================================================================== -->






<Controls:MetroWindow x:Class="DiscerningEye.Views.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:prop="clr-namespace:DiscerningEye.Properties"
                      xmlns:local="clr-namespace:DiscerningEye"
                      mc:Ignorable="d"
                      xmlns:vm="clr-namespace:DiscerningEye.ViewModels"
                      xmlns:Views="clr-namespace:DiscerningEye.Views"
                      xmlns:ac="clr-namespace:DiscerningEye.AlarmController"
                      xmlns:tb="http://www.hardcodet.net/taskbar"
                      xmlns:prism="http://prismlibrary.com/"
                      prism:ViewModelLocator.AutoWireViewModel="True"
                      xmlns:converters="clr-namespace:DiscerningEye.Converters"
                      WindowState="Normal"
                      
                      
                      BorderThickness="1"
                      GlowBrush="Black"
                      ResizeMode="CanResizeWithGrip"
                      
                      x:Name="mainWindow"
                      
                      Icon="pack://application:,,,/DiscerningEye;component/Resources/icon.ico"
                      ShowIconOnTitleBar="False"
                      Height="800" 
                      Width="1200"
                      MaxWidth="1200"
                      MaxHeight="800">
    <Controls:MetroWindow.Resources>
        <converters:BooleanToFlyoutThemeConverter x:Key="BooleanToFlyoutThemeConverter" />
    </Controls:MetroWindow.Resources>
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <TextBlock>
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}Current Eorzea Time: {0:00}:{1:00;00}">
                        <Binding Source="{x:Static ac:Controller.Master}" Path="EorzeaClock.CurrentTimeEorzea.Hour" />
                        <Binding Source="{x:Static ac:Controller.Master}" Path="EorzeaClock.CurrentTimeEorzea.Minute" />
                        <!--<Binding ElementName="AlarmsView" Path="DataContext.EorzeaClock.CurrentTimeEorzea.Hour" />
                        <Binding ElementName="AlarmsView" Path="DataContext.EorzeaClock.CurrentTimeEorzea.Minute" />-->
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <Button Content="Gathering Dictionary"
                    Command="{Binding OpenGatheringDictionaryCommand}" />
            <Button Content="Settings"
                    Command="{Binding OpenSettingsCommand}" />
            <TextBlock Text="{Binding ElementName=mainWindow, Path=Width}" />
            <TextBlock Text="{Binding ElementName=mainWindow, Path=Height}" />
        </Controls:WindowCommands>

    </Controls:MetroWindow.RightWindowCommands>

    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:FlyoutsControl.LayoutTransform>
                <ScaleTransform ScaleX="{Binding Source={StaticResource Settings}, Path=UIScale}" ScaleY="{Binding Source={StaticResource Settings}, Path=UIScale}" />
            </Controls:FlyoutsControl.LayoutTransform>


            <Controls:Flyout IsOpen="{Binding IsSettingsOpen}"
                             Position="Right"
                             Theme="{Binding UserSettings.UseInverseOnFlyout, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToFlyoutThemeConverter}}"
                             Width="600">
                <Views:Settings Margin="10,0,10,10" />
            </Controls:Flyout>
            
            
            
            <Controls:Flyout IsOpen="{Binding IsGatheringDictionaryOpen}"
                             Position="Right"
                             Theme="{Binding UserSettings.UseInverseOnFlyout, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToFlyoutThemeConverter}}"
                             Width="600">
                <Views:GatheringDictionary Margin="10,0,10,10" />
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>
    
    
    <!--<Grid Margin="4">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.LayoutTransform>
            <ScaleTransform ScaleX="{Binding UserSettings.UIScale}"  ScaleY="{Binding UserSettings.UIScale}" />
        </Grid.LayoutTransform>-->


        <DockPanel LastChildFill="True">
            <tb:TaskbarIcon DockPanel.Dock="Top"
                            x:Name="notificationIcon"
                            Visibility="Visible"
                            IconSource="pack://application:,,,/DiscerningEye;component/Resources/icon.ico"
                            ToolTipText="Discerning Eye"
                            MenuActivation="RightClick">
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Application Settings">
                            <MenuItem Header="Enable Only Miniaml Notifications"
                                  IsCheckable="False"
                                  Command="{Binding MinimalNotificationCommand}"/>
                            <MenuItem Header="Enable All Notifications"
                                  IsCheckable="False"
                                  Command="{Binding AllNotificationsCommand}"/>
                            <Separator />
                            <MenuItem Header="Do Not Disturb Mode"
                                  IsCheckable="True"
                                  IsChecked="{Binding UserSettings.DoNotDisturb, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <MenuItem Header="Enable Alarms" 
                              IsCheckable="True"
                              IsChecked="{Binding UserSettings.EnableAlarms, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <MenuItem Header="Enable Early Warning" 
                              IsCheckable="True"
                              IsChecked="{Binding UserSettings.EnableEarlyWarning, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Separator/>
                            <MenuItem Header="Enable Taskbar Ballon Popups" 
                              IsCheckable="True"
                              IsChecked="{Binding UserSettings.EnableBallonTip, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <MenuItem Header="Enable Notification Tone" 
                              IsCheckable="True"
                              IsChecked="{Binding UserSettings.EnableNotificationTone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <MenuItem Header="Enable Text-To-Speech" 
                              IsCheckable="True"
                              IsChecked="{Binding UserSettings.EnableTextToSpeech, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </MenuItem>
                        <MenuItem Header="Visit Github Page" 
                              Command="{Binding GitHubCommand}"/>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>
        <Menu DockPanel.Dock="Top"
                  Grid.Row="0">
            <MenuItem Header="Alarms" Command="{Binding NavigateCommand}" CommandParameter="Alarms" />
            <Separator/>
            <MenuItem Header="Schedules" Command="{Binding NavigateCommand}" CommandParameter="Schedules"/>
        </Menu>
        <ScrollViewer HorizontalScrollBarVisibility="Auto">
            <ContentControl HorizontalAlignment="Center" Width="auto" Height="auto" prism:RegionManager.RegionName="ContentRegion" />
        </ScrollViewer>
    </DockPanel>
    
    <!--</Grid>-->
</Controls:MetroWindow>
